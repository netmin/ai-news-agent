"""Initial database schema

Revision ID: ffa7c73e59fb
Revises: 
Create Date: 2025-07-11 10:05:04.942581

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ffa7c73e59fb'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('collector_runs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('collector_type', sa.String(length=64), nullable=False),
    sa.Column('started_at', sa.DateTime(), nullable=False),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('total_items', sa.Integer(), nullable=False),
    sa.Column('new_items', sa.Integer(), nullable=False),
    sa.Column('duplicate_items', sa.Integer(), nullable=False),
    sa.Column('failed_sources', sa.JSON(), nullable=False),
    sa.Column('statistics', sa.JSON(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_collector_type', 'collector_runs', ['collector_type'], unique=False)
    op.create_index('idx_started_at', 'collector_runs', ['started_at'], unique=False)
    op.create_table('daily_digests',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('sent_at', sa.DateTime(), nullable=True),
    sa.Column('item_count', sa.Integer(), nullable=False),
    sa.Column('content_markdown', sa.Text(), nullable=True),
    sa.Column('content_html', sa.Text(), nullable=True),
    sa.Column('extra_metadata', sa.JSON(), nullable=False),
    sa.Column('is_sent', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('date')
    )
    op.create_index('idx_digest_date', 'daily_digests', ['date'], unique=False)
    op.create_index('idx_digest_sent', 'daily_digests', ['is_sent'], unique=False)
    op.create_table('news_items',
    sa.Column('id', sa.String(length=64), nullable=False),
    sa.Column('url', sa.String(length=2048), nullable=False),
    sa.Column('title', sa.String(length=512), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('summary', sa.Text(), nullable=True),
    sa.Column('source', sa.String(length=128), nullable=False),
    sa.Column('published_at', sa.DateTime(), nullable=False),
    sa.Column('collected_at', sa.DateTime(), nullable=False),
    sa.Column('tags', sa.JSON(), nullable=False),
    sa.Column('extra_metadata', sa.JSON(), nullable=False),
    sa.Column('is_duplicate', sa.Boolean(), nullable=False),
    sa.Column('duplicate_of', sa.String(length=64), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('url', name='uq_news_item_url')
    )
    op.create_index('idx_collected_at', 'news_items', ['collected_at'], unique=False)
    op.create_index('idx_is_duplicate', 'news_items', ['is_duplicate'], unique=False)
    op.create_index('idx_published_at', 'news_items', ['published_at'], unique=False)
    op.create_index('idx_source', 'news_items', ['source'], unique=False)
    op.create_table('weekly_summaries',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('week_start', sa.DateTime(), nullable=False),
    sa.Column('week_end', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('sent_at', sa.DateTime(), nullable=True),
    sa.Column('item_count', sa.Integer(), nullable=False),
    sa.Column('content_markdown', sa.Text(), nullable=True),
    sa.Column('content_html', sa.Text(), nullable=True),
    sa.Column('ai_summary', sa.Text(), nullable=True),
    sa.Column('top_topics', sa.JSON(), nullable=False),
    sa.Column('extra_metadata', sa.JSON(), nullable=False),
    sa.Column('is_sent', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('week_start', 'week_end', name='uq_weekly_period')
    )
    op.create_index('idx_week_end', 'weekly_summaries', ['week_end'], unique=False)
    op.create_index('idx_week_start', 'weekly_summaries', ['week_start'], unique=False)
    op.create_index('idx_weekly_sent', 'weekly_summaries', ['is_sent'], unique=False)
    op.create_table('collector_run_items',
    sa.Column('collector_run_id', sa.Integer(), nullable=True),
    sa.Column('news_item_id', sa.String(length=64), nullable=True),
    sa.ForeignKeyConstraint(['collector_run_id'], ['collector_runs.id'], ),
    sa.ForeignKeyConstraint(['news_item_id'], ['news_items.id'], )
    )
    op.create_index('idx_collector_run_id', 'collector_run_items', ['collector_run_id'], unique=False)
    op.create_index('idx_news_item_id', 'collector_run_items', ['news_item_id'], unique=False)
    op.create_table('deduplication_cache',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('url_hash', sa.String(length=64), nullable=False),
    sa.Column('title_hash', sa.String(length=64), nullable=False),
    sa.Column('content_hash', sa.String(length=64), nullable=False),
    sa.Column('first_seen_at', sa.DateTime(), nullable=False),
    sa.Column('last_seen_at', sa.DateTime(), nullable=False),
    sa.Column('occurrence_count', sa.Integer(), nullable=False),
    sa.Column('news_item_id', sa.String(length=64), nullable=False),
    sa.ForeignKeyConstraint(['news_item_id'], ['news_items.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('url_hash')
    )
    op.create_index('idx_content_hash', 'deduplication_cache', ['content_hash'], unique=False)
    op.create_index('idx_first_seen', 'deduplication_cache', ['first_seen_at'], unique=False)
    op.create_index('idx_title_hash', 'deduplication_cache', ['title_hash'], unique=False)
    op.create_index('idx_url_hash', 'deduplication_cache', ['url_hash'], unique=False)
    op.create_table('digest_entries',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('news_item_id', sa.String(length=64), nullable=False),
    sa.Column('daily_digest_id', sa.Integer(), nullable=True),
    sa.Column('weekly_summary_id', sa.Integer(), nullable=True),
    sa.Column('ranking_score', sa.Float(), nullable=True),
    sa.Column('inclusion_reason', sa.String(length=256), nullable=True),
    sa.ForeignKeyConstraint(['daily_digest_id'], ['daily_digests.id'], ),
    sa.ForeignKeyConstraint(['news_item_id'], ['news_items.id'], ),
    sa.ForeignKeyConstraint(['weekly_summary_id'], ['weekly_summaries.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_entry_daily', 'digest_entries', ['daily_digest_id'], unique=False)
    op.create_index('idx_entry_news_item', 'digest_entries', ['news_item_id'], unique=False)
    op.create_index('idx_entry_weekly', 'digest_entries', ['weekly_summary_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_entry_weekly', table_name='digest_entries')
    op.drop_index('idx_entry_news_item', table_name='digest_entries')
    op.drop_index('idx_entry_daily', table_name='digest_entries')
    op.drop_table('digest_entries')
    op.drop_index('idx_url_hash', table_name='deduplication_cache')
    op.drop_index('idx_title_hash', table_name='deduplication_cache')
    op.drop_index('idx_first_seen', table_name='deduplication_cache')
    op.drop_index('idx_content_hash', table_name='deduplication_cache')
    op.drop_table('deduplication_cache')
    op.drop_index('idx_news_item_id', table_name='collector_run_items')
    op.drop_index('idx_collector_run_id', table_name='collector_run_items')
    op.drop_table('collector_run_items')
    op.drop_index('idx_weekly_sent', table_name='weekly_summaries')
    op.drop_index('idx_week_start', table_name='weekly_summaries')
    op.drop_index('idx_week_end', table_name='weekly_summaries')
    op.drop_table('weekly_summaries')
    op.drop_index('idx_source', table_name='news_items')
    op.drop_index('idx_published_at', table_name='news_items')
    op.drop_index('idx_is_duplicate', table_name='news_items')
    op.drop_index('idx_collected_at', table_name='news_items')
    op.drop_table('news_items')
    op.drop_index('idx_digest_sent', table_name='daily_digests')
    op.drop_index('idx_digest_date', table_name='daily_digests')
    op.drop_table('daily_digests')
    op.drop_index('idx_started_at', table_name='collector_runs')
    op.drop_index('idx_collector_type', table_name='collector_runs')
    op.drop_table('collector_runs')
    # ### end Alembic commands ###
