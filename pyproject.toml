[project]
name = "ai-news-agent"
version = "0.1.0"
description = "AI-powered news aggregator with intelligent deduplication"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
authors = [
    {name = "Vi", email = "vi@example.com"},
]

dependencies = [
    "aiohttp>=3.9.0",
    "feedparser>=6.0.10",
    "aiosqlite>=0.19.0",
    "sqlalchemy>=2.0.0",
    "alembic>=1.13.0",
    "greenlet>=3.0.0",
    "beautifulsoup4>=4.12.0",
    "rapidfuzz>=3.6.0",
    "pyyaml>=6.0.1",
    "python-dateutil>=2.8.2",
    "loguru>=0.7.2",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    "croniter>=2.0.1",
    # Deduplication
    "sentence-transformers>=2.2.0",
    "numpy>=1.24.0",
    # Scheduler
    "apscheduler>=3.10.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.12.0",
    "ruff>=0.1.9",
    "mypy>=1.8.0",
    "pre-commit>=3.6.0",
]
mcp = [
    "mcp>=0.1.0",  # When available
]
ai = [
    "anthropic>=0.8.0",
    "openai>=1.6.0",
]

[project.scripts]
ai-news = "ai_news_agent.cli:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.metadata]
allow-direct-references = true

[tool.black]
line-length = 88
target-version = ['py311']

[tool.ruff]
target-version = "py311"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
# Allow long lines in test fixtures
per-file-ignores = {"tests/fixtures/*.py" = ["E501"]}

[tool.mypy]
python_version = "3.11"
strict = true
warn_return_any = true
warn_unused_configs = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]

[tool.bandit]
exclude_dirs = ["tests", ".venv", "__pycache__"]
skips = ["B101"]  # Skip assert_used test

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*", "*/__pycache__/*", "*/venv/*", "*/.venv/*"]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false

[dependency-groups]
dev = [
    "black>=25.1.0",
    "mypy>=1.16.1",
    "pytest>=8.4.1",
    "pytest-asyncio>=1.0.0",
    "pytest-cov>=6.2.1",
    "ruff>=0.12.2",
]
